package com.freshen.basis.service.impl;

import org.hibernate.Session;
import org.hibernate.Transaction;

import com.freshen.basis.service.IpasswordInfoService;
import com.freshen.entity.basis.PasswordInfo;
import com.freshen.hibernate.HibernateSessionFactory;
import com.freshen.util.HibernateUtil;import com.freshen.clims.baseclass.ClimsServiceBase;

public class PasswordInfoServiceImpl extends ClimsServiceBase implements IpasswordInfoService {

	public PasswordInfo getPasswordInfo(PasswordInfo pi) throws Exception {
		PasswordInfo p=null;
		Session session =HibernateUtil.getSession();	
		p=(PasswordInfo) session.get(PasswordInfo.class, pi.getEmployeeID_s());
		session.clear();
		return p;
		
	}

	public int OperationPasswordInfo(PasswordInfo pi ,int operation,Session session) throws Exception {
		PasswordInfo tmppi=(PasswordInfo) session.get(PasswordInfo.class, pi.getEmployeeID_s());
		if(tmppi!=null){
			//PasswordInfo passwordinfo=new PasswordInfo();
			//新增
			if(operation==1){
				
				if(pi.getEmployeeID_s()!=null && !pi.getEmployeeID_s().equals("")){
					tmppi.setEmployeeID_s(pi.getEmployeeID_s());
				}
				if(pi.getPassword_s()!=null && !pi.getPassword_s().equals("")){
					tmppi.setPassword_s(pi.getPassword_s());
				}
				if(pi.getCreateUser_s() != null && !pi.getCreateUser_s().trim().equals("")){
					tmppi.setCreateUser_s(pi.getCreateUser_s());
				}
				session.saveOrUpdate(tmppi);
				session.flush();
			}
			if(operation ==2){//删除
				session.delete(pi);
				session.flush();			
			}			
		}
		return 1;
	}
	public int OperationPasswordInfo(PasswordInfo pi ,int operation) throws Exception {
		// TODO Auto-generated method stub
		Transaction tx = null;
		Session session=null;
		try {
			session= HibernateUtil.getSession();
			tx=session.beginTransaction();//开启事务
			OperationPasswordInfo( pi , operation, session);
			tx.commit();
			return 1;
		}catch (Exception e){
			tx.rollback();
			throw new Exception(e);
		}finally{
			session.clear();
		}
	}
	
	

}
